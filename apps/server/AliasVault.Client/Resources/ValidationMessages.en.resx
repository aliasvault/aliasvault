<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  
  <!-- Password validation messages -->
  <data name="PasswordMinLength" xml:space="preserve">
    <value>The new password must be at least 10 characters long.</value>
    <comment>Error message for password minimum length validation</comment>
  </data>
  <data name="PasswordsDoNotMatch" xml:space="preserve">
    <value>The new passwords do not match.</value>
    <comment>Error message when password confirmation doesn't match</comment>
  </data>
  <data name="PasswordMinLengthGeneric" xml:space="preserve">
    <value>Password must be at least 10 characters long.</value>
    <comment>Generic error message for password minimum length validation</comment>
  </data>
  <data name="PasswordsDoNotMatchGeneric" xml:space="preserve">
    <value>Passwords do not match.</value>
    <comment>Generic error message when passwords don't match</comment>
  </data>
  
  <!-- Required field validation messages -->
  <data name="UsernameRequired" xml:space="preserve">
    <value>Username is required</value>
    <comment>Error message when username is required</comment>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
    <comment>Error message when password is required</comment>
  </data>
  <data name="SecretKeyRequired" xml:space="preserve">
    <value>Secret key is required</value>
    <comment>Error message when secret key is required</comment>
  </data>
  <data name="ServiceNameRequired" xml:space="preserve">
    <value>Service name is required</value>
    <comment>Error message when service name is required</comment>
  </data>
  <data name="FieldRequired" xml:space="preserve">
    <value>This field is required</value>
    <comment>Generic error message when a field is required</comment>
  </data>
  
  <!-- Terms and conditions -->
  <data name="MustAcceptTerms" xml:space="preserve">
    <value>You must accept the terms and conditions.</value>
    <comment>Error message for terms and conditions acceptance</comment>
  </data>
</root>