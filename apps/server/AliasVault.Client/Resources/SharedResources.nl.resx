<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <!-- Common UI elements -->
  <data name="Save" xml:space="preserve">
    <value>Opslaan</value>
    <comment>Button text for saving changes</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuleren</value>
    <comment>Button text for canceling an action</comment>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Verwijderen</value>
    <comment>Button text for deleting an item</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bewerken</value>
    <comment>Button text for editing an item</comment>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Sluiten</value>
    <comment>Button text for closing a dialog or modal</comment>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Terug</value>
    <comment>Button text for going back</comment>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Volgende</value>
    <comment>Button text for proceeding to the next step</comment>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Laden...</value>
    <comment>Loading message displayed during async operations</comment>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ja</value>
    <comment>Confirmation button text</comment>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nee</value>
    <comment>Rejection button text</comment>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
    <comment>OK button text</comment>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Doorgaan</value>
    <comment>Button text to continue with an action</comment>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Bevestigen</value>
    <comment>Button text to confirm an action</comment>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Vernieuwen</value>
    <comment>Button text to refresh content</comment>
  </data>
  <!-- Common form elements -->
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
    <comment>Label for email input field</comment>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Wachtwoord</value>
    <comment>Label for password input field</comment>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Gebruikersnaam</value>
    <comment>Label for username input field</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Naam</value>
    <comment>Label for name input field</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Beschrijving</value>
    <comment>Label for description input field</comment>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Titel</value>
    <comment>Label for title input field</comment>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notities</value>
    <comment>Label for notes input field</comment>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
    <comment>Label for website input field</comment>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Zoeken</value>
    <comment>Label for search input field</comment>
  </data>
  <!-- Common error messages -->
  <data name="ErrorGeneric" xml:space="preserve">
    <value>Er is een fout opgetreden. Probeer het opnieuw.</value>
    <comment>Generic error message</comment>
  </data>
  <data name="ErrorValidation" xml:space="preserve">
    <value>Controleer de onderstaande fouten.</value>
    <comment>Validation error message</comment>
  </data>
  <data name="ErrorRequired" xml:space="preserve">
    <value>Dit veld is verplicht.</value>
    <comment>Required field validation error</comment>
  </data>
  <data name="ErrorInvalidEmail" xml:space="preserve">
    <value>Voer een geldig e-mailadres in.</value>
    <comment>Invalid email validation error</comment>
  </data>
  <data name="ErrorPasswordMismatch" xml:space="preserve">
    <value>Wachtwoorden komen niet overeen.</value>
    <comment>Password confirmation mismatch error</comment>
  </data>
  <!-- Common status messages -->
  <data name="Success" xml:space="preserve">
    <value>Succes</value>
    <comment>Success status message</comment>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Waarschuwing</value>
    <comment>Warning status message</comment>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Fout</value>
    <comment>Error status message</comment>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Informatie</value>
    <comment>Information status message</comment>
  </data>
  <!-- Loading screen messages -->
  <data name="RefreshPageText" xml:space="preserve">
    <value>Als het laden vastloopt, klik dan op de onderstaande knop klikken om de pagina te verversen.</value>
    <comment>Text shown above refresh button on loading screen</comment>
  </data>
  <!-- Validation error messages for forms -->
  <data name="ErrorPasswordMinLength" xml:space="preserve">
    <value>Het nieuwe wachtwoord moet tenminste 10 tekens lang zijn.</value>
    <comment>Error message for password minimum length validation</comment>
  </data>
  <data name="ErrorPasswordsDoNotMatch" xml:space="preserve">
    <value>Nieuwe wachtwoorden komen niet overeen.</value>
    <comment>Error message when password confirmation doesn't match</comment>
  </data>
  <data name="ErrorPasswordMinLengthGeneric" xml:space="preserve">
    <value>Wachtwoord moet minstens 10 tekens lang zijn.</value>
    <comment>Generic error message for password minimum length validation</comment>
  </data>
  <data name="ErrorPasswordsDoNotMatchGeneric" xml:space="preserve">
    <value>Wachtwoorden komen niet overeen.</value>
    <comment>Generic error message when passwords don't match</comment>
  </data>
  <data name="ErrorMustAcceptTerms" xml:space="preserve">
    <value>Je moet de voorwaarden accepteren.</value>
    <comment>Error message for terms and conditions acceptance</comment>
  </data>
  <data name="ErrorSecretKeyRequired" xml:space="preserve">
    <value>Sleutel is vereist</value>
    <comment>Error message when secret key is required</comment>
  </data>
  <data name="ErrorUsernameRequired" xml:space="preserve">
    <value>Gebruikersnaam is vereist</value>
    <comment>Error message when username is required</comment>
  </data>
  <data name="ErrorPasswordRequired" xml:space="preserve">
    <value>Wachtwoord is vereist</value>
    <comment>Error message when password is required</comment>
  </data>
</root>