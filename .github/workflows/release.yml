name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  upload-install-script:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload install.sh to release
        uses: softprops/action-gh-release@v2
        with:
          files: install.sh
          token: ${{ secrets.GITHUB_TOKEN }}

  build-chrome-extension:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Chrome Extension
        uses: ./.github/actions/build-browser-extension
        with:
          browser: chrome
          upload_to_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-firefox-extension:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Firefox Extension
        uses: ./.github/actions/build-browser-extension
        with:
          browser: firefox
          upload_to_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-edge-extension:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Edge Extension
        uses: ./.github/actions/build-browser-extension
        with:
          browser: edge
          upload_to_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-android-release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/mobile-app
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/mobile-app/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Configure signing
        run: |
          cat >> android/gradle.properties <<EOF
          ALIASVAULT_UPLOAD_STORE_FILE=keystore.jks
          ALIASVAULT_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}
          ALIASVAULT_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ALIASVAULT_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}
          EOF

      - name: Build Signed APK & AAB
        run: |
          cd android
          ./gradlew bundleRelease
          ./gradlew assembleRelease

      - name: Rename APK and AAB files
        run: |
          mv android/app/build/outputs/apk/release/app-release.apk aliasvault-app-android-${{ github.ref_name }}.apk
          mv android/app/build/outputs/bundle/release/app-release.aab aliasvault-app-android-${{ github.ref_name }}.aab

      - name: Upload APK to release
        uses: softprops/action-gh-release@v2
        with:
          files: aliasvault-app-android-${{ github.ref_name }}.apk
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload AAB as a workflow artifact (for internal Play Store submission)
        uses: actions/upload-artifact@v4
        with:
          name: aliasvault-app-android-${{ github.ref_name }}.aab
          path: apps/mobile-app/android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 14