@inject ILogger<ImportServiceKeePass> Logger
@inject NavigationManager NavigationManager
@inject GlobalNotificationService GlobalNotificationService
@using AliasVault.ImportExport.Importers

<ImportServiceCard
    ServiceName="KeePass"
    Description="Import passwords from your KeePass vault"
    LogoUrl="img/importers/keepass.svg"
    OnImportComplete="RefreshVault"
    OnImportConfirmed="ProcessFile"
    @ref="_importServiceCard">
    <div class="mb-4">
        <p class="mb-4 text-gray-700 dark:text-gray-300">Upload your KeePass export file:</p>
    </div>
    <InputFile OnChange="HandleFileUpload" />
</ImportServiceCard>

@code {
    private ImportServiceCard _importServiceCard = null!;
    private IBrowserFile? _selectedFile;

    private void HandleFileUpload(InputFileChangeEventArgs e)
    {
        Logger.LogInformation($"File selected: {e.File.Name}");
        _selectedFile = e.File;
    }

    private async Task ProcessFile()
    {
        if (_selectedFile == null)
        {
            Logger.LogWarning("No file selected for import");
            return;
        }

        Logger.LogInformation($"Processing KeePass file: {_selectedFile.Name}");

        try
        {
            await using var stream = _selectedFile.OpenReadStream();
            using var reader = new StreamReader(stream);
            var fileContents = await reader.ReadToEndAsync();

            var importCredentials = await KeePassImporter.ImportFromCsvAsync(fileContents);
            _importServiceCard.SetImportedCredentials(importCredentials);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error processing KeePass CSV file");
            throw;
        }
    }

    private void RefreshVault()
    {
        GlobalNotificationService.AddSuccessMessage("KeePass CSV import successful!");
        NavigationManager.NavigateTo("/credentials");
    }
}
